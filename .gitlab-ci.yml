stages:
  - remote-state
  - cloudfront

.terraform:
  image: 
    name: hashicorp/terraform:latest
    entrypoint:
      - '/bin/sh'
      - '-c'
  variables:
    AWS_ACCESS_KEY_ID: $aws_access_key_id
    AWS_SECRET_ACCESS_KEY: $aws_secret_access_key

remote-state-plan:
  extends: .terraform
  stage: remote-state
  before_script:
    - terraform -chdir=terraform/remote-state-lock init
  script:
    - terraform -chdir=terraform/remote-state-lock plan
  when: manual

remote-state-apply:
  extends: .terraform
  stage: remote-state
  before_script:
    - terraform -chdir=terraform/remote-state-lock init
  script:
    - terraform -chdir=terraform/remote-state-lock apply -auto-approve
  needs:
  - job: remote-state-plan
  when: manual

remote-state-destroy:
  extends: .terraform
  stage: remote-state
  before_script:
    - terraform -chdir=terraform/remote-state-lock init
  script:
    - terraform -chdir=terraform/remote-state-lock destroy -auto-approve
  needs:
  - job: remote-state-apply
  when: manual

cloudfront-plan:
  extends: .terraform
  stage: cloudfront
  before_script:
    - terraform -chdir=terraform/cloudfront init
  script:
    - terraform -chdir=terraform/cloudfront plan

cloudfront-apply:
  extends: .terraform
  stage: cloudfront
  before_script:
    - terraform -chdir=terraform/cloudfront init
  script:
    - sed -i "s/{WEBSITE_VERSION}/$CI_COMMIT_SHORT_SHA/g" website/src/index.html
    - sed -i "s/{WEBSITE_VERSION}/$CI_COMMIT_SHORT_SHA/g" website/src/index-en.html
    - terraform -chdir=terraform/cloudfront apply -auto-approve
  needs:
  - job: cloudfront-plan
  when: manual

cloudfront-destroy:
  extends: .terraform
  stage: cloudfront
  before_script:
    - terraform -chdir=terraform/cloudfront init
  script:
    - terraform -chdir=terraform/cloudfront destroy -auto-approve
  needs:
  - job: cloudfront-apply
  when: manual
